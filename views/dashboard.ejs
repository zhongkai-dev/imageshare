<!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm fixed-top">
  <div class="container">
    <a class="navbar-brand" href="#">Image Share</a>
    <div class="ms-auto">
      <span class="badge bg-primary me-2">User ID: <%= userId %></span>
      <a href="/auth/logout" class="btn btn-outline-danger btn-sm">Logout</a>
    </div>
  </div>
</nav>

<div class="chat-container">
  <!-- Chat area -->
  <div class="chat-area" id="chatArea">
    <div class="welcome-message">
      <h4>Welcome to Image Share!</h4>
      <p>Upload images and files to share. Click on images for full-screen preview.</p>
    </div>
    
    <% if (typeof error !== 'undefined') { %>
      <div class="alert alert-danger" role="alert">
        <%= error %>
      </div>
    <% } %>
    
    <% if (groupedFiles && groupedFiles.length > 0) { %>
      <% groupedFiles.forEach(group => { %>
        <div class="message-container">
          <div class="message">
            <div class="message-header">
              <strong><%= userId %></strong>
              <small class="text-muted"><%= new Date(group.date).toLocaleString() %></small>
            </div>
            <div class="message-content">
              <!-- If group contains multiple images, show them in a grid -->
              <% if (group.files.length > 1 && group.files.every(file => file.mimetype.startsWith('image/'))) { %>
                <div class="image-grid">
                  <% group.files.forEach(file => { %>
                    <div class="image-grid-item">
                      <img src="/files/view/<%= file._id %>" alt="<%= file.originalName %>" 
                          class="img-thumbnail chat-img" 
                          onclick="openImagePreview('/files/view/<%= file._id %>', '<%= file.originalName %>')">
                    </div>
                  <% }); %>
                </div>
                <div class="file-info mt-2">
                  <span><%= group.files.length %> images</span>
                </div>
              <!-- If single image, show normally -->
              <% } else if (group.files.length === 1 && group.files[0].mimetype.startsWith('image/')) { %>
                <div class="image-preview">
                  <img src="/files/view/<%= group.files[0]._id %>" alt="<%= group.files[0].originalName %>" 
                      class="img-thumbnail chat-img" 
                      onclick="openImagePreview('/files/view/<%= group.files[0]._id %>', '<%= group.files[0].originalName %>')">
                  <div class="file-info">
                    <span><%= group.files[0].originalName %></span>
                    <small><%= (group.files[0].size / 1024).toFixed(2) %> KB</small>
                  </div>
                </div>
              <!-- For multiple non-image files or mixed content -->
              <% } else { %>
                <div class="file-group">
                  <% group.files.forEach(file => { %>
                    <div class="file-bubble">
                      <i class="fas <%= getFileIcon(file.mimetype) %>"></i>
                      <div class="file-info">
                        <span><%= file.originalName %></span>
                        <small><%= (file.size / 1024).toFixed(2) %> KB</small>
                      </div>
                      <div class="file-actions">
                        <a href="/files/download/<%= file._id %>" class="btn btn-sm btn-primary">
                          <i class="fas fa-download"></i>
                        </a>
                        <form action="/files/delete/<%= file._id %>" method="POST" class="d-inline">
                          <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Delete this file?')">
                            <i class="fas fa-trash-alt"></i>
                          </button>
                        </form>
                      </div>
                    </div>
                  <% }); %>
                </div>
              <% } %>
              
              <!-- Group-level actions for image groups -->
              <% if (group.files.length > 1 && group.files.every(file => file.mimetype.startsWith('image/'))) { %>
                <div class="message-actions mt-2">
                  <div class="btn-group">
                    <button class="btn btn-sm btn-outline-primary" onclick="downloadAllFiles('<%= JSON.stringify(group.files.map(f => f._id)) %>')">
                      <i class="fas fa-download"></i> Download All
                    </button>
                  </div>
                </div>
              <% } %>
            </div>
          </div>
        </div>
      <% }); %>
    <% } else { %>
      <div class="empty-state">
        <i class="fas fa-cloud-upload-alt fa-4x text-muted mb-3"></i>
        <h5 class="text-muted">No files uploaded yet</h5>
        <p>Upload your first file using the form below.</p>
      </div>
    <% } %>
    
    <!-- Spacer to ensure last message isn't covered by the upload form -->
    <div style="height: 15px;"></div>
  </div>
  
  <!-- Upload form -->
  <div class="upload-form">
    <form action="/files/upload" method="POST" enctype="multipart/form-data" id="uploadForm">
      <div class="input-group">
        <input class="form-control" type="file" id="files" name="files" multiple required>
        <button type="submit" class="btn btn-primary">
          <i class="fas fa-paper-plane"></i> Upload
        </button>
      </div>
      <div class="form-text text-center text-muted">Upload multiple images and files (Max: 10MB each)</div>
    </form>
  </div>
</div>

<!-- Image Preview Modal -->
<div class="image-preview-overlay" id="imagePreviewOverlay" onclick="closeImagePreview()">
  <div class="image-preview-container">
    <div class="image-preview-header">
      <span id="previewImageName"></span>
      <button class="close-btn" onclick="closeImagePreview()">Ã—</button>
    </div>
    <img id="previewImage" class="preview-image" src="" alt="Preview">
  </div>
</div>

<script>
  // Scroll to bottom of chat on load
  window.onload = function() {
    const chatArea = document.getElementById('chatArea');
    chatArea.scrollTop = chatArea.scrollHeight;
    
    // Add a submit handler to show a loading indicator
    document.getElementById('uploadForm').addEventListener('submit', function() {
      const btn = this.querySelector('button[type="submit"]');
      btn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Uploading...';
      btn.disabled = true;
    });
  };
  
  // Image preview functionality
  function openImagePreview(src, name) {
    document.getElementById('previewImage').src = src;
    document.getElementById('previewImageName').innerText = name;
    document.getElementById('imagePreviewOverlay').style.display = 'flex';
    document.body.style.overflow = 'hidden';
    event.stopPropagation();
  }
  
  function closeImagePreview() {
    document.getElementById('imagePreviewOverlay').style.display = 'none';
    document.body.style.overflow = 'auto';
  }
  
  // Helper function for file icons
  function getFileIcon(mimetype) {
    if (mimetype.startsWith('image/')) return 'fa-file-image text-primary';
    if (mimetype === 'application/pdf') return 'fa-file-pdf text-danger';
    if (mimetype.includes('document') || mimetype.includes('word')) return 'fa-file-word text-primary';
    if (mimetype.includes('spreadsheet') || mimetype.includes('excel')) return 'fa-file-excel text-success';
    if (mimetype.includes('audio')) return 'fa-file-audio text-warning';
    if (mimetype.includes('video')) return 'fa-file-video text-danger';
    if (mimetype.includes('zip') || mimetype.includes('compressed')) return 'fa-file-archive text-warning';
    if (mimetype.includes('text/')) return 'fa-file-alt text-info';
    return 'fa-file text-secondary';
  }
  
  // Download all files in a group
  function downloadAllFiles(fileIds) {
    try {
      const ids = JSON.parse(fileIds);
      ids.forEach((id, index) => {
        // Slight delay between downloads to avoid browser blocking
        setTimeout(() => {
          window.open('/files/download/' + id, '_blank');
        }, index * 300);
      });
    } catch (e) {
      console.error('Error downloading files:', e);
    }
  }
</script> 